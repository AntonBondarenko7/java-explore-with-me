drop table IF EXISTS events CASCADE;
drop table IF EXISTS locations;
drop table IF EXISTS users CASCADE;
drop table IF EXISTS categories;
drop table IF EXISTS participation_requests;
drop table IF EXISTS compilations CASCADE;
drop table IF EXISTS compilations_events;

create TABLE IF NOT EXISTS users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  email VARCHAR(256) NOT NULL,
  name VARCHAR(256) NOT NULL,
  CONSTRAINT pk_users PRIMARY KEY (id),
  CONSTRAINT uq_user_email UNIQUE (email)
);

create TABLE IF NOT EXISTS categories (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(64) NOT NULL,
  CONSTRAINT pk_categories PRIMARY KEY (id),
  CONSTRAINT uq_category_name UNIQUE (name)
);

create TABLE IF NOT EXISTS locations (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  lat REAL NOT NULL,
  lon REAL NOT NULL,
  CONSTRAINT pk_locations PRIMARY KEY (id)
);

create TABLE IF NOT EXISTS events (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  annotation VARCHAR(2048) NOT NULL,
  category_id BIGINT NOT NULL,
  confirmed_requests BIGINT,
  created_on TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  description VARCHAR(8192) NOT NULL,
  event_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  initiator_id BIGINT NOT NULL,
  location_id BIGINT NOT NULL,
  paid BOOLEAN NOT NULL,
  participant_limit INTEGER NOT NULL,
  published_on TIMESTAMP WITHOUT TIME ZONE,
  request_moderation BOOLEAN,
  state VARCHAR(16) NOT NULL,
  title VARCHAR(128) NOT NULL,
  CONSTRAINT pk_events PRIMARY KEY (id),
  CONSTRAINT fk_event_to_categories FOREIGN KEY(category_id)
    REFERENCES categories(id),
  CONSTRAINT fk_event_to_users FOREIGN KEY(initiator_id)
    REFERENCES users(id) ON update RESTRICT ON delete CASCADE,
  CONSTRAINT fk_event_to_locations FOREIGN KEY(location_id)
    REFERENCES locations(id) ON update RESTRICT ON delete CASCADE
);

create TABLE IF NOT EXISTS participation_requests (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  event_id BIGINT NOT NULL,
  requester_id BIGINT NOT NULL,
  status VARCHAR(16) NOT NULL,
  CONSTRAINT pk_participation_requests PRIMARY KEY (id),
  CONSTRAINT fk_participation_request_to_events FOREIGN KEY(event_id)
    REFERENCES events(id) ON update RESTRICT ON delete CASCADE,
  CONSTRAINT fk_participation_request_to_users FOREIGN KEY(requester_id)
    REFERENCES users(id) ON update RESTRICT ON delete CASCADE
);

CREATE TABLE IF NOT EXISTS compilations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    title VARCHAR(64) NOT NULL,
    pinned BOOLEAN NOT NULL,
    CONSTRAINT pk_compilations PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS compilations_events (
    compilation_id BIGINT NOT NULL,
    event_id BIGINT NOT NULL,
    PRIMARY KEY (compilation_id, event_id),
    CONSTRAINT fk_compilation_id FOREIGN KEY (compilation_id) REFERENCES compilations (id),
    CONSTRAINT fk_event_id FOREIGN KEY (event_id) REFERENCES events (id)
);

CREATE TABLE IF NOT EXISTS comments (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    event_id BIGINT NOT NULL,
    author_id BIGINT NOT NULL,
    text VARCHAR(256) NOT NULL,
    created_on TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    status VARCHAR(32) NOT NULL
    edited_on TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_comments PRIMARY KEY (id),
    CONSTRAINT fk_comments_to_events FOREIGN KEY(event_id)
        REFERENCES events(id),
    CONSTRAINT fk_comments_to_users FOREIGN KEY(author_id)
        REFERENCES users(id),
)